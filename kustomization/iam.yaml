---
# Source: iam/charts/main/templates/deployment.yaml
# pv claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: iam-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: wekafs--sdf-k8s01
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# Source: iam/charts/mariadb/templates/deployment.yaml
# pv claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: iam-dev-mariadb
  labels:
    helm.sh/chart: mariadb-0.1.0
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: wekafs--sdf-k8s01
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# Source: iam/charts/main/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: iam-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: iam-dev
---
# Source: iam/charts/mariadb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: iam-dev-mariadb
  labels:
    helm.sh/chart: mariadb-0.1.0
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mariadb-port
      protocol: TCP
      name: mariadb-port
  selector:
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: iam-dev
---
# Source: iam/charts/main/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: main
      app.kubernetes.io/instance: iam-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: main
        app.kubernetes.io/instance: iam-dev
    spec:
      hostname:  iam-dev
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: main
          securityContext:
            {}
          image: "indigoiam/iam-login-service:v1.6.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - secretRef:
                name: panda-secrets-iam-envs
          resources:
            {}
          volumeMounts:
              - name: iam-dev-main-configmap
                mountPath: /indigo-iam/config/
      volumes:
        - name: iam-dev-main-configmap
          secret:
            secretName: panda-secrets-iam-conf
---
# Source: iam/charts/mariadb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam-dev-mariadb
  labels:
    helm.sh/chart: mariadb-0.1.0
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: iam-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/instance: iam-dev
    spec:
      hostname:  iam-dev
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: mariadb
          securityContext:
            {}
          image: "bitnami/mariadb:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: mariadb-port
              containerPort: 3306
              protocol: TCP
          envFrom:
            - secretRef:
                name: panda-secrets-iam-db-envs
          resources:
            {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: iam-dev-mariadb-data
            - mountPath: /docker-entrypoint-initdb.d/
              name: iam-dev-mariadb-initdb
      volumes:
        - name: iam-dev-mariadb-data
          persistentVolumeClaim:
            claimName: iam-dev-mariadb
        - name: iam-dev-mariadb-initdb
          secret:
              secretName: panda-secrets-iam-initdb
---
# Source: iam/charts/main/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iam-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: iam-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-tls-secret: default/ca-secret
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "off"
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      # proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header X-Forwarded-Proto $scheme;
      # proxy_set_header X-Real-IP       $remote_addr;
      # proxy_pass              http://panda-iam-doma-main.cern.ch:8080;
      proxy_set_header        X-SSL-Client-Cert $ssl_client_cert;
      proxy_set_header        X-SSL-Client-I-Dn $ssl_client_i_dn;
      proxy_set_header        X-SSL-Client-S-Dn $ssl_client_s_dn;
      proxy_set_header        X-SSL-Client-Serial $ssl_client_serial;
      proxy_set_header        X-SSL-Client-V-Start $ssl_client_v_start;
      proxy_set_header        X-SSL-Client-V-End   $ssl_client_v_end;
      proxy_set_header        X-SSL-Client-Verify  $ssl_client_verify;
      proxy_set_header        X-SSL-Protocol $ssl_protocol;
      proxy_set_header        X-SSL-Server-Name $ssl_server_name;
      # proxy_redirect http://panda-iam-dev.cern.ch https://panda-iam-dev.cern.ch;
    nginx.ingress.kubernetes.io/server-snippet: |
      ssl on;
      ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers               ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS;
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "on"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "panda-iam-dev.slac.stanford.edu"
      secretName: 
  rules:
    - host: "panda-iam-dev.slac.stanford.edu"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: iam-dev-main
                port:
                  number: 443
