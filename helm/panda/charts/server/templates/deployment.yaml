# pv
{{- if .Values.persistentvolume.create }}
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ include "server.fullname" . }}
  labels:
      {{- include "server.labels" . | nindent 4 }}
spec:
  storageClassName: {{ .Values.persistentvolume.class }}
  capacity:
    storage: {{ .Values.persistentvolume.size }}
  accessModes:
    - ReadWriteMany
  hostPath:
    path: {{ .Values.persistentvolume.path }}
---
{{- end }}
# pv claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "server.fullname" . }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
spec:
  storageClassName: {{ .Values.persistentvolume.class }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.persistentvolume.size }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "server.fullname" . }}
  labels:
    {{- include "server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "server.selectorLabels" . | nindent 6 }}
  template:
    metadata:

      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainer }}
      initContainers:
        - name: check_database
          image: postgres
          command: [ 'sh', '-c',
            'until pg_isready -h ${PANDA_DBHOST} -p 5432; do echo waiting for database; sleep 2; done;' ]
          envFrom:
            - configMapRef:
                {{- if .Values.database.password_ref }}
                name: {{ .Values.database.password_ref }}
                {{- else } }
                name: {{ .Release.Name }}-postgres-configmap
                {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.autoStart }}
          command: [ "/bin/sh", "-c" ]
          args:
            - /etc/rc.d/init.d/httpd-pandasrv start;
              sleep infinity & wait
          {{- end }}
          ports:
            - name: http
              containerPort: 25080
              protocol: TCP
            - name: https
              containerPort: 25443
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
             - name: {{ include "server.fullname" . }}-logs
               mountPath: /var/log/panda
             - name: {{ include "server.fullname" . }}-configmap
               mountPath: /opt/panda/etc/configmap
             {{- if .Values.hostcerts.enabled }}
             - name: {{ include "server.fullname" . }}-certs
               mountPath: /opt/panda/etc/cert
             {{- end }}
          envFrom:
             - configMapRef:
                {{- if .Values.database.password_ref }}
                name: {{ .Values.database.password_ref }}
                {{- else }}
                name: {{ .Release.Name }}-postgres-configmap
                {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "server.fullname" . }}-logs
          persistentVolumeClaim:
            claimName: {{ include "server.fullname" . }}
        - name: {{ include "server.fullname" . }}-configmap
          configMap:
              name: {{ include "server.fullname" . }}-configmap
        {{- if .Values.hostcerts.enabled }}
        - name: {{ include "server.fullname" . }}-certs
          configMap:
              name: {{ include "server.fullname" . }}-certs
        {{ end }}
